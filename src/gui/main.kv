#:import CONF util.CONF
#:import STRINGS util.STRINGS
#:import CONST util.CONST

<View>:
    id: view
    orientation: 'vertical'
    
    canvas.before:
        Color:
            rgba: CONST[app.theme]['background']
        Rectangle:
            pos: self.pos
            size: self.size
    
    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: None
        height: dp(25)
        
        MenuButton:
            id: new
            text: STRINGS['menu'][0][app.lang]
            on_release: root.controller.new_file_popup()
            
        MenuButton:
            id: open
            text: STRINGS['menu'][1][app.lang]
            on_release: root.controller.open_file_popup()

        AnchorLayout:
            anchor_x: 'right'
            size_hint_y: None
            height: dp(25)

            MenuButton:
                text: STRINGS['menu'][3][app.lang]
                on_release: root.options.open(self)

    BoxLayout:
        id: tutorial_parent
        orientation: 'horizontal'

        ScrollView:
            id: scroll
            do_scroll_x: False
            do_scroll_y: True
            bar_width: dp(10)
            scroll_timeout: 1000
            effect_cls: 'ScrollEffect'

            TagTree:
                id: tree
                size_hint_y: None
                hide_root: True

                controller: root.controller.tree_controller
                main_controller: root.controller

        Tutorial:
            id: tutorial
            controller: root.controller

<MenuButton>:
    size_hint: None, None
    size: dp(200), dp(25)
    font_size: sp(18)
    color: CONST[app.theme]['menu_text']
    background_color: CONST[app.theme]['menu']

<Options>:
    MenuButton:
        id: language
        text: STRINGS['menu'][2][app.lang]
        on_release: root.controller.change_language()

    MenuButton:
        id: tutorial
        text: STRINGS['menu'][4][app.lang] if CONF['misc']['show_tutorial'] else STRINGS['menu'][5][app.lang]
        on_release: root.controller.toggle_tutorial()

<Tutorial>:
    orientation: 'vertical'
    size_hint_x: None
    width: dp(300)

    canvas.before:
        Color:
            rgba: CONST[app.theme]['tutorial']
        Rectangle:
            pos: self.pos
            size: self.size

    AnchorLayout:
        anchor_x: 'right'
        size_hint_y: None
        height: dp(19)
        padding: dp(2)

        Button:
            text: STRINGS['tutorial'][1][app.lang]
            size_hint: None, None
            size: dp(60), dp(15)
            font_size: sp(10)
            background_color: CONST[app.theme]['menu']
            on_release: root.controller.close_tutorial()

    Label:
        size_hint_y: None
        width: dp(150)
        height: self.texture_size[1]
        padding: (dp(5), dp(5))
        markup: True
        font_size: sp(15)
        text_size: self.width, None
        color: CONST[app.theme]['text']
        text: STRINGS['tutorial'][0][app.lang]

    BoxLayout:
            
<EntNode>:
    cols: 1
    height: self.minimum_height
    orientation: 'lr-tb'
    color_selected: CONST[app.theme]['selected_node']
    even_color: CONST[app.theme]['background']
    odd_color: CONST[app.theme]['background_odd']
            
    Label:
        id: label
        size_hint_y: None
        width: dp(500)
        height: self.texture_size[1]
        padding: (2, 2)
        font_size: sp(15)
        text_size: self.width, None
        color: CONST[app.theme]['text']

<SourceNode>
    Label:
        id: label
        font_size: sp(15)
        size_hint_y: None
        text_size: self.width, None
        width: dp(500)
        height: self.texture_size[1]
        padding: (2, 2)
        markup: True
        color: CONST[app.theme]['text']

<EntryNode>
    rows: 3
    
    Label:
        id: comment
        font_size: sp(15)
        size_hint: None, None
        size: self.texture_size
        padding: (2, 2)
        color: CONST[app.theme]['text']
    
    Label:
        id: reference
        font_size: sp(15)
        size_hint: None, None
        size: self.texture_size
        padding: (2, 2)
        color: CONST[app.theme]['text']

<TagNode>:    
    cols: 2
    even_color: CONST[app.theme]['tag_background']
    odd_color: CONST[app.theme]['tag_background']
    
    TextInput:
        id: input
        multiline: False
        on_text_validate: root.edit_done()
        font_size: sp(15)
        size_hint_y: None
        height: dp(22)
        padding: [2, 2, 2, 2]
        background_color: CONST[app.theme]['input_background']
        foreground_color: [1, 1, 1, 1]
        
<BasePopup>:
    title: ""
    separator_height: 0
    size_hint: None, None
    size: dp(400), dp(200)
    on_open: self.focus = True
    dirselect: True

    GridLayout:
        cols: 1
        rows: 2
        size_hint: None, None
        size: root.size
    
        Label:
            id: label
            font_size: sp(15)
            text_size: self.size
            valign: 'middle'
            padding: dp(20), dp(20)
            color: CONST[app.theme]['text']
            
        AnchorLayout
            size_hint: 1, None
            height: dp(25)
            
            Button:
                id: ok_button
                text: STRINGS['popup'][1][app.lang]
                size_hint: None, None
                size: dp(75), dp(25)
                on_release: root.ok()
                color: CONST[app.theme]['text']

<FilePopup>:
    title_size: sp(20)
    title_align: 'center'
    separator_height: 0
    on_open: self.focus = True

<NewFile>:
    title: STRINGS['filechooser'][0][app.lang]

    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: 'vertical'

        canvas.before:
            Color:
                rgba: CONST[app.theme]['tag_background']
            Rectangle:
                pos: self.pos
                size: self.size

        FileChooserIconView:
            id: filechooser

        Label:
            id: file_name_caption
            size_hint: None, None
            width: self.texture_size[0]
            height: dp(25)
            font_size: sp(17)
            text: STRINGS['filechooser'][7][app.lang]

        TextInput:
            id: file_name
            size_hint_y: None
            height: dp(25)
            multiline: False  
            font_size: sp(17)
            padding: [2, 2, 2, 2]
            background_color: CONST[app.theme]['input_background']
        
        BoxLayout:
            size_hint_y: None
            height: dp(25)
            orientation: 'horizontal'
        
            Button:
                id: cancel
                text: STRINGS["filechooser"][4][app.lang]
                on_release: root.close()
                background_color: CONST[app.theme]['menu']
                
            Button:
                id: new
                text: STRINGS['filechooser'][2][app.lang]
                on_release: root.act(filechooser.path, file_name.text)
                background_color: CONST[app.theme]['menu']
    
<OpenFile>:
    title: STRINGS["filechooser"][1][app.lang]

    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: 'vertical'

        canvas.before:
            Color:
                rgba: CONST[app.theme]['tag_background']
            Rectangle:
                pos: self.pos
                size: self.size

        FileChooserIconView:
            id: filechooser
        
        BoxLayout:
            size_hint_y: None
            height: dp(25)
            orientation: 'horizontal'
            
            Button:
                id: cancel
                text: STRINGS['filechooser'][4][app.lang]
                on_release: root.close()
                background_color: CONST[app.theme]['menu']
                
            Button:
                id: open
                text: STRINGS['filechooser'][3][app.lang]
                on_release: root.act(filechooser.path, filechooser.selection[0])
                background_color: CONST[app.theme]['menu']